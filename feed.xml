<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-04-17T16:04:27+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design.
</subtitle><entry><title type="html">a post with giscus comments</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2022/giscus-comments/" rel="alternate" type="text/html" title="a post with giscus comments" /><published>2022-12-10T15:59:00+00:00</published><updated>2022-12-10T15:59:00+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2022/giscus-comments</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2022/giscus-comments/"><![CDATA[<p>This post shows how to add GISCUS comments.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[an example of a blog post with giscus comments]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog" /><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">a post with redirect</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2022/redirect/" rel="alternate" type="text/html" title="a post with redirect" /><published>2022-02-01T17:39:00+00:00</published><updated>2022-02-01T17:39:00+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2022/redirect</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2022/redirect/"><![CDATA[<p>Redirecting to another page.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[you can also redirect to assets like pdf]]></summary></entry><entry><title type="html">a post with diagrams</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2021/diagrams/" rel="alternate" type="text/html" title="a post with diagrams" /><published>2021-07-04T17:39:00+00:00</published><updated>2021-07-04T17:39:00+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2021/diagrams</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2021/diagrams/"><![CDATA[<p>This theme supports generating various diagrams from a text description using <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> plugin.
Below, we generate a few examples of such diagrams using languages such as <a href="https://mermaid-js.github.io/mermaid/" target="\_blank">mermaid</a>, <a href="https://plantuml.com/" target="\_blank">plantuml</a>, <a href="https://vega.github.io/vega-lite/" target="\_blank">vega-lite</a>, etc.</p>

<p><strong>Note:</strong> different diagram-generation packages require external dependencies to be installed on your machine.
Also, be mindful of that because of diagram generation the fist time you build your Jekyll website after adding new diagrams will be SLOW.
For any other details, please refer to <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> README.</p>

<h2 id="mermaid">Mermaid</h2>

<p>Install mermaid using <code class="language-plaintext highlighter-rouge">node.js</code> package manager <code class="language-plaintext highlighter-rouge">npm</code> by running the following command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> mermaid.cli
</code></pre></div></div>

<p>The diagram below was generated by the following code:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% mermaid %}
sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
{% endmermaid %}
</code></pre></div></div>

<div class="jekyll-diagrams diagrams mermaid">
  <svg id="mermaid-1681747478596" width="100%" xmlns="http://www.w3.org/2000/svg" height="100%" style="max-width:450px;" viewBox="-50 -10 450 231"><style>#mermaid-1681747478596 .label{font-family:trebuchet ms,verdana,arial;color:#333}#mermaid-1681747478596 .node circle,#mermaid-1681747478596 .node ellipse,#mermaid-1681747478596 .node polygon,#mermaid-1681747478596 .node rect{fill:#ececff;stroke:#9370db;stroke-width:1px}#mermaid-1681747478596 .node.clickable{cursor:pointer}#mermaid-1681747478596 .arrowheadPath{fill:#333}#mermaid-1681747478596 .edgePath .path{stroke:#333;stroke-width:1.5px}#mermaid-1681747478596 .edgeLabel{background-color:#e8e8e8}#mermaid-1681747478596 .cluster rect{fill:#ffffde!important;stroke:#aa3!important;stroke-width:1px!important}#mermaid-1681747478596 .cluster text{fill:#333}#mermaid-1681747478596 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:trebuchet ms,verdana,arial;font-size:12px;background:#ffffde;border:1px solid #aa3;border-radius:2px;pointer-events:none;z-index:100}#mermaid-1681747478596 .actor{stroke:#ccf;fill:#ececff}#mermaid-1681747478596 text.actor{fill:#000;stroke:none}#mermaid-1681747478596 .actor-line{stroke:grey}#mermaid-1681747478596 .messageLine0{marker-end:"url(#arrowhead)"}#mermaid-1681747478596 .messageLine0,#mermaid-1681747478596 .messageLine1{stroke-width:1.5;stroke-dasharray:"2 2";stroke:#333}#mermaid-1681747478596 #arrowhead{fill:#333}#mermaid-1681747478596 #crosshead path{fill:#333!important;stroke:#333!important}#mermaid-1681747478596 .messageText{fill:#333;stroke:none}#mermaid-1681747478596 .labelBox{stroke:#ccf;fill:#ececff}#mermaid-1681747478596 .labelText,#mermaid-1681747478596 .loopText{fill:#000;stroke:none}#mermaid-1681747478596 .loopLine{stroke-width:2;stroke-dasharray:"2 2";marker-end:"url(#arrowhead)";stroke:#ccf}#mermaid-1681747478596 .note{stroke:#aa3;fill:#fff5ad}#mermaid-1681747478596 .noteText{fill:#000;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:14px}#mermaid-1681747478596 .section{stroke:none;opacity:.2}#mermaid-1681747478596 .section0{fill:rgba(102,102,255,.49)}#mermaid-1681747478596 .section2{fill:#fff400}#mermaid-1681747478596 .section1,#mermaid-1681747478596 .section3{fill:#fff;opacity:.2}#mermaid-1681747478596 .sectionTitle0,#mermaid-1681747478596 .sectionTitle1,#mermaid-1681747478596 .sectionTitle2,#mermaid-1681747478596 .sectionTitle3{fill:#333}#mermaid-1681747478596 .sectionTitle{text-anchor:start;font-size:11px;text-height:14px}#mermaid-1681747478596 .grid .tick{stroke:#d3d3d3;opacity:.3;shape-rendering:crispEdges}#mermaid-1681747478596 .grid path{stroke-width:0}#mermaid-1681747478596 .today{fill:none;stroke:red;stroke-width:2px}#mermaid-1681747478596 .task{stroke-width:2}#mermaid-1681747478596 .taskText{text-anchor:middle;font-size:11px}#mermaid-1681747478596 .taskTextOutsideRight{fill:#000;text-anchor:start;font-size:11px}#mermaid-1681747478596 .taskTextOutsideLeft{fill:#000;text-anchor:end;font-size:11px}#mermaid-1681747478596 .taskText0,#mermaid-1681747478596 .taskText1,#mermaid-1681747478596 .taskText2,#mermaid-1681747478596 .taskText3{fill:#fff}#mermaid-1681747478596 .task0,#mermaid-1681747478596 .task1,#mermaid-1681747478596 .task2,#mermaid-1681747478596 .task3{fill:#8a90dd;stroke:#534fbc}#mermaid-1681747478596 .taskTextOutside0,#mermaid-1681747478596 .taskTextOutside1,#mermaid-1681747478596 .taskTextOutside2,#mermaid-1681747478596 .taskTextOutside3{fill:#000}#mermaid-1681747478596 .active0,#mermaid-1681747478596 .active1,#mermaid-1681747478596 .active2,#mermaid-1681747478596 .active3{fill:#bfc7ff;stroke:#534fbc}#mermaid-1681747478596 .activeText0,#mermaid-1681747478596 .activeText1,#mermaid-1681747478596 .activeText2,#mermaid-1681747478596 .activeText3{fill:#000!important}#mermaid-1681747478596 .done0,#mermaid-1681747478596 .done1,#mermaid-1681747478596 .done2,#mermaid-1681747478596 .done3{stroke:grey;fill:#d3d3d3;stroke-width:2}#mermaid-1681747478596 .doneText0,#mermaid-1681747478596 .doneText1,#mermaid-1681747478596 .doneText2,#mermaid-1681747478596 .doneText3{fill:#000!important}#mermaid-1681747478596 .crit0,#mermaid-1681747478596 .crit1,#mermaid-1681747478596 .crit2,#mermaid-1681747478596 .crit3{stroke:#f88;fill:red;stroke-width:2}#mermaid-1681747478596 .activeCrit0,#mermaid-1681747478596 .activeCrit1,#mermaid-1681747478596 .activeCrit2,#mermaid-1681747478596 .activeCrit3{stroke:#f88;fill:#bfc7ff;stroke-width:2}#mermaid-1681747478596 .doneCrit0,#mermaid-1681747478596 .doneCrit1,#mermaid-1681747478596 .doneCrit2,#mermaid-1681747478596 .doneCrit3{stroke:#f88;fill:#d3d3d3;stroke-width:2;cursor:pointer;shape-rendering:crispEdges}#mermaid-1681747478596 .activeCritText0,#mermaid-1681747478596 .activeCritText1,#mermaid-1681747478596 .activeCritText2,#mermaid-1681747478596 .activeCritText3,#mermaid-1681747478596 .doneCritText0,#mermaid-1681747478596 .doneCritText1,#mermaid-1681747478596 .doneCritText2,#mermaid-1681747478596 .doneCritText3{fill:#000!important}#mermaid-1681747478596 .titleText{text-anchor:middle;font-size:18px;fill:#000}#mermaid-1681747478596 g.classGroup text{fill:#9370db;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:10px}#mermaid-1681747478596 g.classGroup rect{fill:#ececff;stroke:#9370db}#mermaid-1681747478596 g.classGroup line{stroke:#9370db;stroke-width:1}#mermaid-1681747478596 .classLabel .box{stroke:none;stroke-width:0;fill:#ececff;opacity:.5}#mermaid-1681747478596 .classLabel .label{fill:#9370db;font-size:10px}#mermaid-1681747478596 .relation{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1681747478596 #compositionEnd,#mermaid-1681747478596 #compositionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1681747478596 #aggregationEnd,#mermaid-1681747478596 #aggregationStart{fill:#ececff;stroke:#9370db;stroke-width:1}#mermaid-1681747478596 #dependencyEnd,#mermaid-1681747478596 #dependencyStart,#mermaid-1681747478596 #extensionEnd,#mermaid-1681747478596 #extensionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1681747478596 .branch-label,#mermaid-1681747478596 .commit-id,#mermaid-1681747478596 .commit-msg{fill:#d3d3d3;color:#d3d3d3}</style><style>#mermaid-1681747478596 {
    color: rgb(0, 0, 0);
    font: normal normal 400 normal 16px / normal "Times New Roman";
  }</style><g></g><g><line id="actor0" x1="75" y1="5" x2="75" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="0" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><line id="actor1" x1="275" y1="5" x2="275" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="200" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g><defs><marker id="arrowhead" refX="5" refY="2" markerWidth="6" markerHeight="4" orient="auto"><path d="M 0,0 V 4 L6,2 Z"></path></marker></defs><defs><marker id="crosshead" markerWidth="15" markerHeight="8" orient="auto" refX="16" refY="4"><path fill="black" stroke="#000000" stroke-width="1px" d="M 9,2 V 6 L16,4 Z" style="stroke-dasharray: 0, 0;"></path><path fill="none" stroke="#000000" stroke-width="1px" d="M 0,1 L 6,7 M 6,1 L 0,7" style="stroke-dasharray: 0, 0;"></path></marker></defs><g><text x="175" y="93" class="messageText" style="text-anchor: middle;">Hello John, how are you?</text><line x1="275" y1="100" x2="75" y2="100" class="messageLine0" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="fill: none;"></line></g><g><text x="175" y="128" class="messageText" style="text-anchor: middle;">Great!</text><line x1="75" y1="135" x2="275" y2="135" class="messageLine1" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="stroke-dasharray: 3, 3; fill: none;"></line></g><g><rect x="0" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><rect x="200" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g></svg>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[an example of a blog post with diagrams]]></summary></entry><entry><title type="html">a post with github metadata</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2020/github-metadata/" rel="alternate" type="text/html" title="a post with github metadata" /><published>2020-09-28T21:01:00+00:00</published><updated>2020-09-28T21:01:00+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2020/github-metadata</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2020/github-metadata/"><![CDATA[<p>A sample blog page that demonstrates the accessing of github meta data.</p>

<h2 id="what-does-github-metadata-do">What does Github-MetaData do?</h2>
<ul>
  <li>Propagates the site.github namespace with repository metadata</li>
  <li>Setting site variables :
    <ul>
      <li>site.title</li>
      <li>site.description</li>
      <li>site.url</li>
      <li>site.baseurl</li>
    </ul>
  </li>
  <li>Accessing the metadata - duh.</li>
  <li>Generating edittable links.</li>
</ul>

<h2 id="additional-reading">Additional Reading</h2>
<ul>
  <li>If you’re recieving incorrect/missing data, you may need to perform a Github API<a href="https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md"> authentication</a>.</li>
  <li>Go through this <a href="https://jekyll.github.io/github-metadata/">README</a> for more details on the topic.</li>
  <li><a href="https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md">This page</a> highlights all the feilds you can access with github-metadata.
<br /></li>
</ul>

<h2 id="example-metadata">Example MetaData</h2>
<ul>
  <li>Host Name :</li>
  <li>URL :</li>
  <li>BaseURL :</li>
  <li>Archived :</li>
  <li>Contributors :</li>
</ul>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[a quick run down on accessing github metadata.]]></summary></entry><entry><title type="html">a post with disqus comments</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/disqus-comments/" rel="alternate" type="text/html" title="a post with disqus comments" /><published>2015-10-20T15:59:00+00:00</published><updated>2015-10-20T15:59:00+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/disqus-comments</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/disqus-comments/"><![CDATA[<p>This post shows how to add DISQUS comments.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[an example of a blog post with disqus comments]]></summary></entry><entry><title type="html">a post with math</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/math/" rel="alternate" type="text/html" title="a post with math" /><published>2015-10-20T15:12:00+00:00</published><updated>2015-10-20T15:12:00+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/math</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/math/"><![CDATA[<p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p>

<p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p>

\[\sum_{k=1}^\infty |\langle x, e_k \rangle|^2 \leq \|x\|^2\]

<p>You can also use <code class="language-plaintext highlighter-rouge">\begin{equation}...\end{equation}</code> instead of <code class="language-plaintext highlighter-rouge">$$</code> for display mode math.
MathJax will automatically number equations:</p>

<p>\begin{equation}
\label{eq:cauchy-schwarz}
\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)
\end{equation}</p>

<p>and by adding <code class="language-plaintext highlighter-rouge">\label{...}</code> inside the equation environment, we can now refer to the equation using <code class="language-plaintext highlighter-rouge">\eqref</code>.</p>

<p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="math" /><summary type="html"><![CDATA[an example of a blog post with some math]]></summary></entry><entry><title type="html">a post with code</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/code/" rel="alternate" type="text/html" title="a post with code" /><published>2015-07-15T15:09:00+00:00</published><updated>2015-07-15T15:09:00+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/code</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/code/"><![CDATA[<p>This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting.
It supports more than 100 languages.
This example is in C++.
All you have to do is wrap your code in markdown code tags:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">c++
</span><span class="n">code</span> <span class="n">code</span> <span class="n">code</span>
<span class="p">```</span>
</code></pre></div></div>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>By default, it does not display line numbers. If you want to display line numbers for every code block, you can set <code class="language-plaintext highlighter-rouge">kramdown.syntax_highlighter_opts.block.line_numbers</code> to true in your <code class="language-plaintext highlighter-rouge">_config.yml</code> file.</p>

<p>If you want to display line numbers for a specific code block, all you have to do is wrap your code in a liquid tag:</p>

<p>{% highlight c++ linenos %}  <br /> code code code <br /> {% endhighlight %}</p>

<p>The keyword <code class="language-plaintext highlighter-rouge">linenos</code> triggers display of line numbers.
Produces something like this:</p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="code" /><summary type="html"><![CDATA[an example of a blog post with some code]]></summary></entry><entry><title type="html">a post with images</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/images/" rel="alternate" type="text/html" title="a post with images" /><published>2015-05-15T21:01:00+00:00</published><updated>2015-05-15T21:01:00+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/images</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/images/"><![CDATA[<p>This is an example post with image galleries.</p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/ritukeshbharali.github.io/assets/img/9-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/ritukeshbharali.github.io/assets/img/9-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/ritukeshbharali.github.io/assets/img/9-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/ritukeshbharali.github.io/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/ritukeshbharali.github.io/assets/img/7-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/ritukeshbharali.github.io/assets/img/7-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/ritukeshbharali.github.io/assets/img/7-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/ritukeshbharali.github.io/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>
</div>
<div class="caption">
    A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all.
</div>

<p>Images can be made zoomable.
Simply add <code class="language-plaintext highlighter-rouge">data-zoomable</code> to <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> tags that you want to make zoomable.</p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/ritukeshbharali.github.io/assets/img/8-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/ritukeshbharali.github.io/assets/img/8-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/ritukeshbharali.github.io/assets/img/8-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/ritukeshbharali.github.io/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/ritukeshbharali.github.io/assets/img/10-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/ritukeshbharali.github.io/assets/img/10-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/ritukeshbharali.github.io/assets/img/10-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/ritukeshbharali.github.io/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>
</div>

<p>The rest of the images in this post are all zoomable, arranged into different mini-galleries.</p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/ritukeshbharali.github.io/assets/img/11-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/ritukeshbharali.github.io/assets/img/11-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/ritukeshbharali.github.io/assets/img/11-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/ritukeshbharali.github.io/assets/img/11.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/ritukeshbharali.github.io/assets/img/12-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/ritukeshbharali.github.io/assets/img/12-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/ritukeshbharali.github.io/assets/img/12-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/ritukeshbharali.github.io/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/ritukeshbharali.github.io/assets/img/7-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/ritukeshbharali.github.io/assets/img/7-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/ritukeshbharali.github.io/assets/img/7-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/ritukeshbharali.github.io/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>
</div>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="images" /><summary type="html"><![CDATA[this is what included images could look like]]></summary></entry><entry><title type="html">a post with formatting and links</title><link href="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/formatting-and-links/" rel="alternate" type="text/html" title="a post with formatting and links" /><published>2015-03-15T16:40:16+00:00</published><updated>2015-03-15T16:40:16+00:00</updated><id>https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/formatting-and-links</id><content type="html" xml:base="https://ritukeshbharali.github.io/ritukeshbharali.github.io/blog/2015/formatting-and-links/"><![CDATA[<p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p>

<h4 id="hipster-list">Hipster list</h4>
<ul>
    <li>brunch</li>
    <li>fixie</li>
    <li>raybans</li>
    <li>messenger bag</li>
</ul>

<p>Hoodie Thundercats retro, tote bag 8-bit Godard craft beer gastropub. Truffaut Tumblr taxidermy, raw denim Kickstarter sartorial dreamcatcher. Quinoa chambray slow-carb salvia readymade, bicycle rights 90’s yr typewriter selfies letterpress cardigan vegan.</p>

<hr />

<p>Pug heirloom High Life vinyl swag, single-origin coffee four dollar toast taxidermy reprehenderit fap distillery master cleanse locavore. Est anim sapiente leggings Brooklyn ea. Thundercats locavore excepteur veniam eiusmod. Raw denim Truffaut Schlitz, migas sapiente Portland VHS twee Bushwick Marfa typewriter retro id keytar.</p>

<blockquote>
    We do not grow absolutely, chronologically. We grow sometimes in one dimension, and not in another, unevenly. We grow partially. We are relative. We are mature in one realm, childish in another.
    —Anais Nin
</blockquote>

<p>Fap aliqua qui, scenester pug Echo Park polaroid irony shabby chic ex cardigan church-key Odd Future accusamus. Blog stumptown sartorial squid, gastropub duis aesthetic Truffaut vero. Pinterest tilde twee, odio mumblecore jean shorts lumbersexual.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="links" /><summary type="html"><![CDATA[march & april, looking forward to summer]]></summary></entry></feed>